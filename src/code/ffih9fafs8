{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: len}, name: {_nodetype: ID,  name: t}, type: ->}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: arr}, name: {_nodetype: ID,  name: t}, type: ->}, subscript: {_nodetype: ID,  name: i}}, op: !=, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 1}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: checkZero, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: Struct,  decls: None, name: intal}}}}]},  type: {_nodetype: TypeDecl,  declname: checkZero, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}