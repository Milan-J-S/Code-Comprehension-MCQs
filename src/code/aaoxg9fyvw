{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: max, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: max, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: max}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: n}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: dist, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: dist, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: access, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: ID,  name: n}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: access, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: access}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 1}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: access}, subscript: {_nodetype: ID,  name: i}}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: access}, subscript: {_nodetype: ID,  name: i}}, op: -, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: access}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}}, name: diff, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: diff, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: diff}, op: <, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: diff}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: diff}, op: *, right: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: dist}, op: +=, rvalue: {_nodetype: ID,  name: diff}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "The total distance travelled = %d"}, {_nodetype: ID,  name: dist}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}