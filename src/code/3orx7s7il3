{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: size}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 1}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: ++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: k}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: j}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: >=, right: {_nodetype: Constant,  type: int, value: 0}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: <, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: j}}}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: j}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: j}, op: --}],  {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ID,  name: k}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insertion_sort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: size, quals: [const], storage: [], type: {_nodetype: TypeDecl,  declname: size, quals: [const], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: insertion_sort, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}