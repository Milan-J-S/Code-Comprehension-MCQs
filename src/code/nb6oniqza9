{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: new, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: new, quals: [], type: {_nodetype: Struct,  decls: None, name: TREE}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: Struct,  decls: None, name: TREE}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 1}, name: flag, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: flag, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: new}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: create}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: root}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: root}}, {_nodetype: While, cond: {_nodetype: ID,  name: flag},  stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: info}, name: {_nodetype: ID,  name: new}, type: ->}, op: <, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: info}, name: {_nodetype: ID,  name: temp}, type: ->}},  iffalse: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: temp}, type: ->}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: temp}, type: ->}}, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: temp}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: new}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: flag}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}],  iftrue: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: left}, name: {_nodetype: ID,  name: temp}, type: ->}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: left}, name: {_nodetype: ID,  name: temp}, type: ->}}, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: left}, name: {_nodetype: ID,  name: temp}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: new}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: flag}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}],    iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: root}, op: =, rvalue: {_nodetype: ID,  name: new}}}, {_nodetype: Return,  expr: {_nodetype: ID,  name: root}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: lexins, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: root, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: root, quals: [], type: {_nodetype: Struct,  decls: None, name: TREE}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: lexins, quals: [], type: {_nodetype: Struct,  decls: None, name: TREE}}}}}, param_decls: None}