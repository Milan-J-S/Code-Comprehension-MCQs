{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: space, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: space, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}, name: stars, quals: [], storage: [static], type: {_nodetype: TypeDecl,  declname: stars, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: <=, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Return,  expr: None}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: space}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: stars}, op: +=, rvalue: {_nodetype: Constant,  type: int, value: 2}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: space}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: " "}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: stars}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "*"}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: r}, op: --}]},  name: {_nodetype: ID,  name: print}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: space}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: stars}, op: -=, rvalue: {_nodetype: Constant,  type: int, value: 2}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: space}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: " "}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: stars}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "*"}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n"}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: print, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: r, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: r, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: print, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}