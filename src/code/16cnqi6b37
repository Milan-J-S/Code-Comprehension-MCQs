{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: d, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: d, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: -, right: {_nodetype: ID,  name: c}}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: d}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: d}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: ID,  name: d}}, op: >, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: t}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: ID,  name: d}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: ID,  name: d}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: list}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ID,  name: t}}],      decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: bubble_sort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: list, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: None, dim_quals: [], type: {_nodetype: TypeDecl,  declname: list, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}]},  type: {_nodetype: TypeDecl,  declname: bubble_sort, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}