{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: pointer}, op: +, right: {_nodetype: ID,  name: c}}, op: *}, op: ==, right: {_nodetype: ID,  name: find}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: ID,  name: c}}}],  {_nodetype: Return,  expr: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: linear_search, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pointer, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: pointer, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: find, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: find, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}]},  type: {_nodetype: TypeDecl,  declname: linear_search, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}}, param_decls: None}