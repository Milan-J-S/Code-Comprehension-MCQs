{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ele, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ele, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: p, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: p, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter the element"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: ele}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: p}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}, op: sizeof}]},  name: {_nodetype: ID,  name: malloc}}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: p}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: ele}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: link}, name: {_nodetype: ID,  name: p}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: NULL}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: first}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: link}, name: {_nodetype: ID,  name: p}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: first}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: first}, op: =, rvalue: {_nodetype: ID,  name: p}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: first}, op: =, rvalue: {_nodetype: ID,  name: p}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}