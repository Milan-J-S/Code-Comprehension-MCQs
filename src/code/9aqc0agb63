{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pivot, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: pivot, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: first}, op: <, right: {_nodetype: ID,  name: last}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: ID,  name: first}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: pivot}, op: =, rvalue: {_nodetype: ID,  name: first}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: j}, op: =, rvalue: {_nodetype: ID,  name: last}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: j}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: i}}, op: <, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: pivot}}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <=, right: {_nodetype: ID,  name: last}}},  stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: j}}, op: >, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: pivot}}},  stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: j}, op: p--}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: j}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: i}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: j}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: j}}, op: =, rvalue: {_nodetype: ID,  name: temp}}],   {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: pivot}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: pivot}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: j}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x}, subscript: {_nodetype: ID,  name: j}}, op: =, rvalue: {_nodetype: ID,  name: temp}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}, {_nodetype: ID,  name: first}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: qsort}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: ID,  name: last}]},  name: {_nodetype: ID,  name: qsort}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: qsort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 50}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: first, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: first, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: last, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: last, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: qsort, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}