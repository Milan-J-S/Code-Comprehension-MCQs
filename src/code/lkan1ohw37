{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: {_nodetype: Return,  expr: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: *, right: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: factorial}}}}, iftrue: {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 1}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: factorial, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: factorial, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}}, param_decls: None}