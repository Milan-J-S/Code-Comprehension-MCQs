{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter information for 1st distance\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter feet: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: d1}, type: .}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter inch: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%f"}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: d1}, type: .}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nEnter information for 2nd distance\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter feet: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: d2}, type: .}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter inch: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%f"}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: d2}, type: .}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: d1}, type: .}, op: +, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: d2}, type: .}}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: d1}, type: .}, op: +, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: d2}, type: .}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: >, right: {_nodetype: Constant,  type: double, value: 12.0}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: -, right: {_nodetype: Constant,  type: double, value: 12.0}}}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, op: ++}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nSum of distances = %d\\\-%.1f\\""}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: feet}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: inch}, name: {_nodetype: ID,  name: sumOfDistances}, type: .}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}