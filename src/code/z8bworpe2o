{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}, op: !=, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: postorder}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 2}}]},  name: {_nodetype: ID,  name: postorder}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d "}, {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}]},  name: {_nodetype: ID,  name: printf}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: postorder, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: postorder, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}