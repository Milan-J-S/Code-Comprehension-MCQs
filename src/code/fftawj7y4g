{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: d, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: d, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: length, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: length, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pointer, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: pointer, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: result, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: result, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ch, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ch, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: length}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: s}]},  name: {_nodetype: ID,  name: strlen}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: result}, op: =, rvalue: {_nodetype: Cast,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: length}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: malloc}}, to_type: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: pointer}, op: =, rvalue: {_nodetype: ID,  name: s}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: ch}, op: <=, right: {_nodetype: Constant,  type: char, value: "z"}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: ch}, op: =, rvalue: {_nodetype: Constant,  type: char, value: "a"}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: ch}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: ID,  name: length}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: pointer}, op: *}, op: ==, right: {_nodetype: ID,  name: ch}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: UnaryOp,  expr: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: result}, op: +, right: {_nodetype: ID,  name: d}}, op: *}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: pointer}, op: *}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: d}, op: p++}],  {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: pointer}, op: p++}],  {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: pointer}, op: =, rvalue: {_nodetype: ID,  name: s}}],  {_nodetype: Assignment,  lvalue: {_nodetype: UnaryOp,  expr: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: result}, op: +, right: {_nodetype: ID,  name: d}}, op: *}, op: =, rvalue: {_nodetype: Constant,  type: char, value: "\\0"}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: s}, {_nodetype: ID,  name: result}]},  name: {_nodetype: ID,  name: strcpy}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: result}]},  name: {_nodetype: ID,  name: free}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: sort_string, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: s, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: s, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}]},  type: {_nodetype: TypeDecl,  declname: sort_string, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}