{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: b, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: b, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: y, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: y, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: gcd, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: gcd, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: lcm, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: lcm, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter two integers\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: x}, op: &}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: y}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: a}, op: =, rvalue: {_nodetype: ID,  name: x}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: b}, op: =, rvalue: {_nodetype: ID,  name: y}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: b}, op: !=, right: {_nodetype: Constant,  type: int, value: 0}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: t}, op: =, rvalue: {_nodetype: ID,  name: b}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: b}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: a}, op: %, right: {_nodetype: ID,  name: b}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: a}, op: =, rvalue: {_nodetype: ID,  name: t}}],  {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: gcd}, op: =, rvalue: {_nodetype: ID,  name: a}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Greatest common divisor of %d and %d = %d\\n"}, {_nodetype: ID,  name: x}, {_nodetype: ID,  name: y}, {_nodetype: ID,  name: gcd}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}