{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ch, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ch, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: file_name, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 25}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: file_name, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: FILE}, op: *, right: {_nodetype: ID,  name: fp}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter name of a file you wish to see\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: file_name}]},  name: {_nodetype: ID,  name: gets}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: fp}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: file_name}, {_nodetype: Constant,  type: string, value: "r"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: fp}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Error while opening the file.\\n"}]},  name: {_nodetype: ID,  name: perror}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: EXIT_FAILURE}]},  name: {_nodetype: ID,  name: exit}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "The contents of %s file are:\\n"}, {_nodetype: ID,  name: file_name}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: ch}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: fp}]},  name: {_nodetype: ID,  name: fgetc}}}, op: !=, right: {_nodetype: ID,  name: EOF}},  stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c"}, {_nodetype: ID,  name: ch}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: fp}]},  name: {_nodetype: ID,  name: fclose}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}