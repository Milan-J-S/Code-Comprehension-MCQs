{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "The following matrix shows the shortest distances between every pair of vertices \\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: V}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: <, right: {_nodetype: ID,  name: V}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: j}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: dist}, subscript: {_nodetype: ID,  name: i}}, subscript: {_nodetype: ID,  name: j}}, op: ==, right: {_nodetype: ID,  name: INF}},  iffalse: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%7d"}, {_nodetype: ArrayRef,  name: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: dist}, subscript: {_nodetype: ID,  name: i}}, subscript: {_nodetype: ID,  name: j}}]},  name: {_nodetype: ID,  name: printf}}, iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%7s"}, {_nodetype: Constant,  type: string, value: "INF"}]},  name: {_nodetype: ID,  name: printf}}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n"}]},  name: {_nodetype: ID,  name: printf}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: printSolution, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: dist, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: None, dim_quals: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: ID,  name: V}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: dist, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}}]},  type: {_nodetype: TypeDecl,  declname: printSolution, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}