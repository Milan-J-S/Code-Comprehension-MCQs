{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: node}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Return,  expr: None}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: pre}, subscript: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: *}}, op: =, rvalue: {_nodetype: ID,  name: node}}, {_nodetype: Assignment,  lvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: *}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: *}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: n}, {_nodetype: ID,  name: A}, {_nodetype: ID,  name: B}, {_nodetype: ID,  name: pre}, {_nodetype: ID,  name: i}, {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: A}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: node}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}]},  name: {_nodetype: ID,  name: preorder}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: n}, {_nodetype: ID,  name: A}, {_nodetype: ID,  name: B}, {_nodetype: ID,  name: pre}, {_nodetype: ID,  name: i}, {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: B}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: node}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}]},  name: {_nodetype: ID,  name: preorder}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: preorder, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: A, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: ID,  name: n}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: A, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: B, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: ID,  name: n}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: B, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pre, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: ID,  name: n}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: pre, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: node, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: node, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: preorder, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}