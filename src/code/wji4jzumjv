{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nContents of the dynamic table:\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: cur}, name: {_nodetype: ID,  name: t}, type: .}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d  "}, {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: t}, type: .}, subscript: {_nodetype: ID,  name: i}}]},  name: {_nodetype: ID,  name: printf}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n\\n"}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: display, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: Struct,  decls: None, name: dynamic_table}}}]},  type: {_nodetype: TypeDecl,  declname: display, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}