{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: str, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: str, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: sub, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: sub, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: str}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, op: sizeof}, op: *, right: {_nodetype: Constant,  type: int, value: 100000000000}}]},  name: {_nodetype: ID,  name: malloc}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: sub}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, op: sizeof}, op: *, right: {_nodetype: Constant,  type: int, value: 1000}}]},  name: {_nodetype: ID,  name: malloc}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%[^$]"}, {_nodetype: ID,  name: str}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%s"}, {_nodetype: ID,  name: sub}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: clock}}, name: begin, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: begin, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d \\n"}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: str}, {_nodetype: ID,  name: sub}]},  name: {_nodetype: ID,  name: search}}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: clock}}, name: end, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: end, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nTime in ms is %ld"}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: end}, op: -, right: {_nodetype: ID,  name: begin}}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}