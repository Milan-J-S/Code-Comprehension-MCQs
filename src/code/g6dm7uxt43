{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ID,  name: n}, name: m, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: m, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 1}, name: p, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: p, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: m}, op: >, right: {_nodetype: Constant,  type: int, value: 1}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: p}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: p}, op: *, right: {_nodetype: ID,  name: m}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: m}, op: p--}],  {_nodetype: Return,  expr: {_nodetype: ID,  name: p}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: factorial, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: factorial, quals: [], type: {_nodetype: IdentifierType,  names: [long, long, int]}}}}, param_decls: None}