{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ch, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ch, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Input a character\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: ch}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Switch, cond: {_nodetype: ID,  name: ch},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "a"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "A"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "e"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "E"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "i"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "I"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "o"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "O"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "u"}, stmts: None}, {_nodetype: Case,  expr: {_nodetype: Constant,  type: char, value: "U"}, stmts: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c is a vowel.\\n"}, {_nodetype: ID,  name: ch}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Break,  {_nodetype: Default,  stmts: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c isn\t a vowel.\\n"}, {_nodetype: ID,  name: ch}]},  name: {_nodetype: ID,  name: printf}}]}],  {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}