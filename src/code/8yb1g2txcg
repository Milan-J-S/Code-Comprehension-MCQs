{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: choice, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: choice, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x1, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x1, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pos, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: pos, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: list}, op: =, rvalue: {_nodetype: ID,  name: NULL}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter your choice 1 -> Front Insertion\\n\\t\\t 2->End Insertion\\n\\t\\t3-> Display"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n\\t 4 -> Front deletion\\n\\t 5->End deletion\\n\\t 6 -> position Insertion\\n\\t 7 -> position deletion \\n\\t "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: " 8 -> ordered insertion \\n\\t 9->Exit"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: While, cond: {_nodetype: Constant,  type: int, value: 1},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: choice}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Switch, cond: {_nodetype: ID,  name: choice},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 1}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter the element"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: x}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: frontins}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 2}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter the element"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: x}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: endins}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 3}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "The element in the list are: \\t"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: display}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 4}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: frontdel}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 5}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: enddel}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 6}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter the element and its position to be inserted "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: x}, op: &}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: pos}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}, {_nodetype: ID,  name: pos}]},  name: {_nodetype: ID,  name: posins}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 7}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter the position of the node to be deleted "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: pos}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: pos}]},  name: {_nodetype: ID,  name: posdel}}],  {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 8}, stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Ordered Insertion\\n Enter the element"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: x}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: orderins}}],  {_nodetype: Break,  {_nodetype: Default,  stmts: [{_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Invalid choice \\t"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: int, value: 1}]},  name: {_nodetype: ID,  name: exit}}],  {_nodetype: Break,      decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}