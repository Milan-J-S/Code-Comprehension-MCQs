{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: &}, name: ar, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: ar, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}, op: &}, name: al, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: al, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: &}, name: br, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: br, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}, op: &}, name: bl, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: bl, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: *, right: {_nodetype: Constant,  type: int, value: 5}}}, op: &}, name: asum, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: asum, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: *, right: {_nodetype: Constant,  type: int, value: 5}}, op: +, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}}, op: &}, name: bsum, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: bsum, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: *, right: {_nodetype: Constant,  type: int, value: 0}}}, op: &}, name: x1, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: x1, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: *, right: {_nodetype: Constant,  type: int, value: 1}}}, op: &}, name: x2, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: x2, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: *, right: {_nodetype: Constant,  type: int, value: 2}}}, op: &}, name: x3, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: x3, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: <=, right: {_nodetype: ID,  name: KARAT_CUTOFF}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: a}, {_nodetype: ID,  name: b}, {_nodetype: ID,  name: ret}, {_nodetype: ID,  name: d}]},  name: {_nodetype: ID,  name: gradeSchool}}, {_nodetype: Return,  expr: None}],  {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: asum}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: al}, subscript: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ar}, subscript: {_nodetype: ID,  name: i}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: bsum}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: bl}, subscript: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: br}, subscript: {_nodetype: ID,  name: i}}}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: ar}, {_nodetype: ID,  name: br}, {_nodetype: ID,  name: x1}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}]},  name: {_nodetype: ID,  name: karatsuba}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: al}, {_nodetype: ID,  name: bl}, {_nodetype: ID,  name: x2}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}]},  name: {_nodetype: ID,  name: karatsuba}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: asum}, {_nodetype: ID,  name: bsum}, {_nodetype: ID,  name: x3}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}]},  name: {_nodetype: ID,  name: karatsuba}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: d}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x3}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x3}, subscript: {_nodetype: ID,  name: i}}, op: -, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x1}, subscript: {_nodetype: ID,  name: i}}}, op: -, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x2}, subscript: {_nodetype: ID,  name: i}}}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: d}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: ret}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: +, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: d}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}}, op: +=, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: x3}, subscript: {_nodetype: ID,  name: i}}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: karatsuba, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: b, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: b, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ret, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: ret, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: d, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: d, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: karatsuba, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}