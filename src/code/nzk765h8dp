{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: length, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: length, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: begin, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: begin, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: end, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: end, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: length}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: s}]},  name: {_nodetype: ID,  name: string_length}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: begin}, op: =, rvalue: {_nodetype: ID,  name: s}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: end}, op: =, rvalue: {_nodetype: ID,  name: s}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: length}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: end}, op: p++}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: length}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: end}, op: *}}, {_nodetype: Assignment,  lvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: end}, op: *}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: begin}, op: *}}, {_nodetype: Assignment,  lvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: begin}, op: *}, op: =, rvalue: {_nodetype: ID,  name: temp}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: begin}, op: p++}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: end}, op: p--}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: reverse, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: s, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: s, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}]},  type: {_nodetype: TypeDecl,  declname: reverse, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}