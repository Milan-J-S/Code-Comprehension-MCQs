{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: cur}, name: {_nodetype: ID,  name: t}, type: .}, op: ==, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}, op: *, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: inc_factor}, name: {_nodetype: ID,  name: t}, type: .}}]},  name: {_nodetype: ID,  name: ceil}}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: t}, type: .}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: t}, type: .}, {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: Struct,  decls: None, name: dynamic_table}}}, op: sizeof}, op: *, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}}]},  name: {_nodetype: ID,  name: realloc}}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: t}, type: .}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: t}, type: .}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: Struct,  decls: None, name: dynamic_table}}}, op: sizeof}]},  name: {_nodetype: ID,  name: malloc}}}],  {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: t}, type: .}, subscript: {_nodetype: StructRef,  field: {_nodetype: ID,  name: cur}, name: {_nodetype: ID,  name: t}, type: .}}, op: =, rvalue: {_nodetype: ID,  name: key}}, {_nodetype: UnaryOp,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: cur}, name: {_nodetype: ID,  name: t}, type: .}, op: p++}, {_nodetype: Return,  expr: {_nodetype: ID,  name: t}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: key, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: key, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: Struct,  decls: None, name: dynamic_table}}}]},  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: Struct,  decls: None, name: dynamic_table}}}}, param_decls: None}