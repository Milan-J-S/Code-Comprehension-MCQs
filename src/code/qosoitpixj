{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: FILE}, op: *, right: {_nodetype: ID,  name: fp}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: fq}, op: *}]}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: fp}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "player.txt"}, {_nodetype: Constant,  type: string, value: "w"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: fq}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "score.txt"}, {_nodetype: Constant,  type: string, value: "w"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: first}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: Struct,  decls: None, name: prio}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: first}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: temp}, op: !=, right: {_nodetype: ID,  name: NULL}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: fp}, {_nodetype: Constant,  type: string, value: "%s\\n"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: name}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: fprintf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: fq}, {_nodetype: Constant,  type: string, value: "%d\\n"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: pr}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: fprintf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}}],   iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "empty queue"}]},  name: {_nodetype: ID,  name: printf}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: write, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: write, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}