{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: NODE}, op: *, right: {_nodetype: ID,  name: temp}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: clist}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: clist}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "The List is.....\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}, op: !=, right: {_nodetype: ID,  name: clist}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\t%d->"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: info}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\t%d->"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: info}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: printf}}],  iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Empty List "}]},  name: {_nodetype: ID,  name: printf}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: cdisplay, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: cdisplay, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}