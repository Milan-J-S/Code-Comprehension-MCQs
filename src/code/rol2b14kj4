{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: j}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: j}}, op: >, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, name: temp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: j}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: j}}, op: =, rvalue: {_nodetype: ID,  name: temp}}],      decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: sort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 10}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}]},  type: {_nodetype: TypeDecl,  declname: sort, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}