{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: b, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: b, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: b}, op: =, rvalue: {_nodetype: Cast,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}, op: sizeof}, op: *, right: {_nodetype: ID,  name: n}}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: malloc}}, to_type: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Cast,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}, op: sizeof}, op: *, right: {_nodetype: ID,  name: n}}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: malloc}}, to_type: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: >, right: {_nodetype: Constant,  type: int, value: 1}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}],  {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: j}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: ExprList,  exprs: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: j}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}]}, next: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: j}, op: p++}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}]}, stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: c}, subscript: {_nodetype: ID,  name: j}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: b}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}]},  name: {_nodetype: ID,  name: mergeSort}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: c}, {_nodetype: ID,  name: j}]},  name: {_nodetype: ID,  name: mergeSort}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: a}, {_nodetype: ID,  name: b}, {_nodetype: ID,  name: c}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}, {_nodetype: ID,  name: j}]},  name: {_nodetype: ID,  name: merge}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: b}]},  name: {_nodetype: ID,  name: free}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: c}]},  name: {_nodetype: ID,  name: free}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: mergeSort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [long, int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}]},  type: {_nodetype: TypeDecl,  declname: mergeSort, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}