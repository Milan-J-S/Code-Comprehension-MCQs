{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: pos, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: pos, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: Constant,  type: int, value: 99}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: i}}, op: >=, right: {_nodetype: ID,  name: n}},  stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: pos}, op: =, rvalue: {_nodetype: ID,  name: i}}, {_nodetype: While, cond: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: i}},  stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: r}, op: =, rvalue: {_nodetype: ID,  name: i}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: >, right: {_nodetype: ID,  name: pos}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: ID,  name: r}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p--}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: pos}}, op: =, rvalue: {_nodetype: ID,  name: n}}],  iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "overflow"}]},  name: {_nodetype: ID,  name: printf}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insertws, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: insertws, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}