{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 1}, name: exp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: exp, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: b, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 100}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: b, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: m, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: m, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}, op: >, right: {_nodetype: ID,  name: m}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: m}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}}],  {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: m}, op: /, right: {_nodetype: ID,  name: exp}}, op: >, right: {_nodetype: Constant,  type: int, value: 0}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: InitList,  exprs: [{_nodetype: Constant,  type: int, value: 0}]}, name: box, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 10}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: box, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: box}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}, op: /, right: {_nodetype: ID,  name: exp}}, op: %, right: {_nodetype: Constant,  type: int, value: 10}}}, op: p++}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: Constant,  type: int, value: 10}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 1}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: box}, subscript: {_nodetype: ID,  name: i}}, op: +=, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: box}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: >=, right: {_nodetype: Constant,  type: int, value: 0}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: n}, op: -, right: {_nodetype: ID,  name: i}}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p--}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: UnaryOp,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: box}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}, op: /, right: {_nodetype: ID,  name: exp}}, op: %, right: {_nodetype: Constant,  type: int, value: 10}}}, op: --}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: n}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: i}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: exp}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: exp}, op: *, right: {_nodetype: Constant,  type: int, value: 10}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n\\nPass:  "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: a}, {_nodetype: ID,  name: n}]},  name: {_nodetype: ID,  name: print}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: rsort, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: rsort, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}