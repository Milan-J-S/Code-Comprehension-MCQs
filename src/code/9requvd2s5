{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 1}, name: result, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: result, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: <=, right: {_nodetype: ID,  name: n}},  init: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: c}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 1}}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}, stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: result}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: result}, op: *, right: {_nodetype: ID,  name: c}}}}, {_nodetype: Return,  expr: {_nodetype: ID,  name: result}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: factorial, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: n, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: n, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: factorial, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}}, param_decls: None}