{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: r}, name: {_nodetype: ID,  name: que}, type: ->}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, op: %, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: que}, type: ->}}, op: ==, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: f}, name: {_nodetype: ID,  name: que}, type: ->}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Queue full\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}],  {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: r}, name: {_nodetype: ID,  name: que}, type: ->}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: r}, name: {_nodetype: ID,  name: que}, type: ->}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, op: %, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: size}, name: {_nodetype: ID,  name: que}, type: ->}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: q}, name: {_nodetype: ID,  name: que}, type: ->}, subscript: {_nodetype: StructRef,  field: {_nodetype: ID,  name: r}, name: {_nodetype: ID,  name: que}, type: ->}}, op: =, rvalue: {_nodetype: ID,  name: x}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: f}, name: {_nodetype: ID,  name: que}, type: ->}, op: ==, right: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: f}, name: {_nodetype: ID,  name: que}, type: ->}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 1}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: que, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: que, quals: [], type: {_nodetype: Struct,  decls: None, name: QUEUE}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}