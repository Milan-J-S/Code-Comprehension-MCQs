{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: dict}, op: sizeof}]},  name: {_nodetype: ID,  name: malloc}}, name: temp, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: Struct,  decls: None, name: dict}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: start}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: t}]},  name: {_nodetype: ID,  name: strlen}}, name: len, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: len, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ID,  name: i}, name: nxt, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: nxt, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: ID,  name: len}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ed}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: nxt}}}, type: .}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: nxt}, op: =, rvalue: {_nodetype: ID,  name: i}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: StructRef,  field: {_nodetype: ID,  name: start}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ed}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: nxt}}}, type: .}, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: StructRef,  field: {_nodetype: ID,  name: end}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ed}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: nxt}}}, type: .}, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: x}, op: ==, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: k}, op: =, rvalue: {_nodetype: ID,  name: x}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: <=, right: {_nodetype: ID,  name: x}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: k}, op: p++}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: ==, right: {_nodetype: ID,  name: len}},  iffalse: None, iftrue: {_nodetype: Break,  {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: >, right: {_nodetype: ID,  name: x}},  iffalse: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}, op: !=, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: s}, subscript: {_nodetype: ID,  name: k}}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Not FOUND \\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: None}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ed}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: nxt}}}, type: .}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: nxt}, op: =, rvalue: {_nodetype: ID,  name: i}}],    iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "NOT FOUND\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: None}],   {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ed}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: nxt}}}, type: .}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: temp}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: t}]},  name: {_nodetype: ID,  name: strlen}}]},  name: {_nodetype: ID,  name: DFS}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n\\n"}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: search, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}]},  type: {_nodetype: TypeDecl,  declname: search, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}