{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: Constant,  type: int, value: 0}}, name: t, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: ctb}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: ctb}, op: p--}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, name: j, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: j, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 2}}, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: j}, op: <=, right: {_nodetype: ID,  name: ctb}}, op: ||, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: <=, right: {_nodetype: ID,  name: ctb}}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ID,  name: j}, name: m, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: m, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: <=, right: {_nodetype: ID,  name: ctb}},  iffalse: None, iftrue: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: j}}, op: >, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: k}}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: m}, op: =, rvalue: {_nodetype: ID,  name: k}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: m}}, name: temp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: m}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: i}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: b}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ID,  name: temp}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: ID,  name: m}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: j}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: *, right: {_nodetype: Constant,  type: int, value: 2}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: k}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: *, right: {_nodetype: Constant,  type: int, value: 2}}, op: +, right: {_nodetype: Constant,  type: int, value: 2}}}],  {_nodetype: Return,  expr: {_nodetype: ID,  name: t}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: deleteb, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: deleteb, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}