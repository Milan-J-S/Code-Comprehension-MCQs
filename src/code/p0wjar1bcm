{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: FILE}, op: *, right: {_nodetype: ID,  name: fp}}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: FILE}, op: *, right: {_nodetype: ID,  name: fr}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: fr}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "text.c"}, {_nodetype: Constant,  type: string, value: "w"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%s"}, {_nodetype: ID,  name: c}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: !=, right: {_nodetype: Constant,  type: char, value: "\\0"}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: c}, {_nodetype: ID,  name: fr}]},  name: {_nodetype: ID,  name: putc}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: p++}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}