{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: e, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: e, quals: [], type: {_nodetype: Struct,  decls: None, name: euclid}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: b}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: d}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: ID,  name: a}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: x}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: y}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: Return,  expr: {_nodetype: ID,  name: e}}],  {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: f, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: f, quals: [], type: {_nodetype: Struct,  decls: None, name: euclid}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: f}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: b}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: a}, op: %, right: {_nodetype: ID,  name: b}}]},  name: {_nodetype: ID,  name: extended_euclid}}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: d}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: d}, name: {_nodetype: ID,  name: f}, type: .}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: x}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: y}, name: {_nodetype: ID,  name: f}, type: .}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: y}, name: {_nodetype: ID,  name: e}, type: .}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: x}, name: {_nodetype: ID,  name: f}, type: .}, op: -, right: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: a}, op: /, right: {_nodetype: ID,  name: b}}, op: *, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: y}, name: {_nodetype: ID,  name: f}, type: .}}}}, {_nodetype: Return,  expr: {_nodetype: ID,  name: e}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: extended_euclid, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: b, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: b, quals: [], type: {_nodetype: IdentifierType,  names: [long]}}}]},  type: {_nodetype: TypeDecl,  declname: extended_euclid, quals: [], type: {_nodetype: Struct,  decls: None, name: euclid}}}}, param_decls: None}