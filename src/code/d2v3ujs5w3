{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: c, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: c, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: e, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: e, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: DoWhile, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: c}, op: !=, right: {_nodetype: Constant,  type: int, value: 4}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "press 1=insert, 2=delete, 3=display, 4=terminate"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: c}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Switch, cond: {_nodetype: ID,  name: c},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 1}, stmts: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "enter element"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: e}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: e}]},  name: {_nodetype: ID,  name: insert}}, {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 2}, stmts: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: e}, op: =, rvalue: {_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: delete}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: e}, op: !=, right: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}},  iffalse: None, iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "the element deleted is %d"}, {_nodetype: ID,  name: e}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: Break,  {_nodetype: Case,  expr: {_nodetype: Constant,  type: int, value: 3}, stmts: [{_nodetype: FuncCall, args: None,  name: {_nodetype: ID,  name: display}}, {_nodetype: Break,      decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}