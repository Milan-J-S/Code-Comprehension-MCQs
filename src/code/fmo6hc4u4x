{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ch, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ch, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: source_file, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 20}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: source_file, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: target_file, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: {_nodetype: Constant,  type: int, value: 20}, dim_quals: [], type: {_nodetype: TypeDecl,  declname: target_file, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}, {_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: FILE}, op: *, right: {_nodetype: ID,  name: source}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: target}, op: *}]}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter name of file to copy\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: source_file}]},  name: {_nodetype: ID,  name: gets}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: source}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: source_file}, {_nodetype: Constant,  type: string, value: "r"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: source}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Press any key to exit...\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: EXIT_FAILURE}]},  name: {_nodetype: ID,  name: exit}}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter name of target file\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: target_file}]},  name: {_nodetype: ID,  name: gets}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: target}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: target_file}, {_nodetype: Constant,  type: string, value: "w"}]},  name: {_nodetype: ID,  name: fopen}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: target}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: source}]},  name: {_nodetype: ID,  name: fclose}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Press any key to exit...\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: EXIT_FAILURE}]},  name: {_nodetype: ID,  name: exit}}],  {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: ch}, op: =, rvalue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: source}]},  name: {_nodetype: ID,  name: fgetc}}}, op: !=, right: {_nodetype: ID,  name: EOF}},  stmt: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: ch}, {_nodetype: ID,  name: target}]},  name: {_nodetype: ID,  name: fputc}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "File copied successfully.\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: source}]},  name: {_nodetype: ID,  name: fclose}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: target}]},  name: {_nodetype: ID,  name: fclose}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}