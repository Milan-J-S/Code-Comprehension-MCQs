{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}, op: !=, right: {_nodetype: Constant,  type: int, value: 0}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: key}, op: <, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}},  iffalse: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 2}}}, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: i}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}}],  {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}, op: =, rvalue: {_nodetype: ID,  name: key}}],  iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: =, rvalue: {_nodetype: ID,  name: key}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: key, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: key, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}