{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: ExprList,  exprs: [{_nodetype: BinaryOp,  left: {_nodetype: ID,  name: NODE}, op: *, right: {_nodetype: ID,  name: temp}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: prev}, op: *}]}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: list}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: list}, type: ->}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: list}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}, op: !=, right: {_nodetype: ID,  name: NULL}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: prev}, op: =, rvalue: {_nodetype: ID,  name: temp}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}}],  {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: prev}, type: ->}, op: =, rvalue: {_nodetype: ID,  name: NULL}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: " The deleted element is %d"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: info}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: temp}]},  name: {_nodetype: ID,  name: free}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: list}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: list}, op: =, rvalue: {_nodetype: ID,  name: NULL}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: temp}]},  name: {_nodetype: ID,  name: free}}],  iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "List is empty"}]},  name: {_nodetype: ID,  name: printf}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: enddel, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: enddel, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}