{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}, op: !=, right: {_nodetype: Constant,  type: int, value: 0}},  stmt: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d  "}, {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: t}, subscript: {_nodetype: ID,  name: i}}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}],  {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n"}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: display, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: display, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}