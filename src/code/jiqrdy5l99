{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: ==, right: {_nodetype: Constant,  type: int, value: 99}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: ID,  name: r}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: r}, op: ++}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: elem}, op: <=, right: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: >=, right: {_nodetype: Constant,  type: int, value: 0}}},  stmt: {_nodetype: EmptyStatement,  {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: i}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p--}],  {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}, op: =, rvalue: {_nodetype: ID,  name: elem}}],  iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "overflow"}]},  name: {_nodetype: ID,  name: printf}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: elem, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: elem, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}