{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: ID,  name: root}, name: temp, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}, {_nodetype: For, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: s}]},  name: {_nodetype: ID,  name: strlen}}},  init: {_nodetype: DeclList,  decls: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]}, next: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: i}, op: p++}, stmt: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: s}, subscript: {_nodetype: ID,  name: i}}}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: next}, name: {_nodetype: ID,  name: temp}, type: ->}, subscript: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: s}, subscript: {_nodetype: ID,  name: i}}}}, iftrue: {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}}],  {_nodetype: Return,  expr: {_nodetype: StructRef,  field: {_nodetype: ID,  name: ct}, name: {_nodetype: ID,  name: temp}, type: ->}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: find, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: s, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: s, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}]},  type: {_nodetype: TypeDecl,  declname: find, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}