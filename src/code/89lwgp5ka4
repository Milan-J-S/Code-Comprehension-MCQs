{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: triangle_side, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: triangle_side, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: triangle_area, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: triangle_area, quals: [], type: {_nodetype: IdentifierType,  names: [float]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp_variable, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: temp_variable, quals: [], type: {_nodetype: IdentifierType,  names: [float]}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nEnter the Side of the triangle:"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: triangle_side}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp_variable}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: int, value: 3}]},  name: {_nodetype: ID,  name: sqrt}}, op: /, right: {_nodetype: Constant,  type: int, value: 4}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: triangle_area}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: temp_variable}, op: *, right: {_nodetype: ID,  name: triangle_side}}, op: *, right: {_nodetype: ID,  name: triangle_side}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\nArea of Equilateral Triangle is: %f"}, {_nodetype: ID,  name: triangle_area}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}