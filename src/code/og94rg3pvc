{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: num1, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: num1, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: num2, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: num2, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: num3, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: num3, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: p1, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: p1, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: p2, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: p2, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: p3, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: p3, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter First Number: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num1}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter Second Number: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num2}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Enter Third Number: "}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num3}, op: &}]},  name: {_nodetype: ID,  name: scanf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: p1}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num1}, op: &}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: p2}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num2}, op: &}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: p3}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: num3}, op: &}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p1}, op: *}, op: >, right: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p2}, op: *}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p2}, op: *}, op: >, right: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p3}, op: *}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d is the largest number"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p3}, op: *}]},  name: {_nodetype: ID,  name: printf}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d is the largest number"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p2}, op: *}]},  name: {_nodetype: ID,  name: printf}}],   iftrue: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p1}, op: *}, op: >, right: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p3}, op: *}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d is the largest number"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p3}, op: *}]},  name: {_nodetype: ID,  name: printf}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d is the largest number"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: p1}, op: *}]},  name: {_nodetype: ID,  name: printf}}],   {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 0}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: main, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: main, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}