{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: >=, right: {_nodetype: ID,  name: l}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: l}, op: +, right: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: -, right: {_nodetype: ID,  name: l}}, op: /, right: {_nodetype: Constant,  type: int, value: 2}}}, name: mid, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: mid, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: mid}}, op: ==, right: {_nodetype: ID,  name: x}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: ID,  name: mid}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: mid}}, op: >, right: {_nodetype: ID,  name: x}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: arr}, {_nodetype: ID,  name: l}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: mid}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: binarySearch}}}}, {_nodetype: Return,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: arr}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: mid}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: ID,  name: r}, {_nodetype: ID,  name: x}]},  name: {_nodetype: ID,  name: binarySearch}}}],  {_nodetype: Return,  expr: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: binarySearch, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: arr, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: None, dim_quals: [], type: {_nodetype: TypeDecl,  declname: arr, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: l, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: l, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: r, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: r, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: binarySearch, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}