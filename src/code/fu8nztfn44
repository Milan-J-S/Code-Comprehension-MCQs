{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Constant,  type: int, value: 0}, name: i, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: i, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: numKeys}, name: {_nodetype: ID,  name: x}, type: ->}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: >, right: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: keys}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}}},  stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: i}, op: =, rvalue: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: i}, op: <, right: {_nodetype: StructRef,  field: {_nodetype: ID,  name: numKeys}, name: {_nodetype: ID,  name: x}, type: ->}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: ==, right: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: keys}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}}},  iffalse: {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: x}, type: ->}, op: ==, right: {_nodetype: Constant,  type: int, value: 1}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "Inside search\\n"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: kids}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, {_nodetype: ID,  name: k}]},  name: {_nodetype: ID,  name: search}}],  iftrue: {_nodetype: Return,  expr: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}}, iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "\\n %d %s %s %d %d"}, {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: keys}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: s1}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: bodies}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, type: .}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: s2}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: bodies}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, type: .}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: ind1}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: bodies}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, type: .}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: ind2}, name: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: bodies}, name: {_nodetype: ID,  name: x}, type: ->}, subscript: {_nodetype: ID,  name: i}}, type: .}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Return,  expr: {_nodetype: ID,  name: i}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: search, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: x, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: x, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: search, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}