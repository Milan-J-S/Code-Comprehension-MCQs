{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: a}, op: *}, op: ==, right: {_nodetype: Constant,  type: int, value: 0}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: a}, op: *}, op: >, right: {_nodetype: ID,  name: max}},  iffalse: None, iftrue: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: max}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: a}, op: *}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: a}, op: p++}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: a}]},  name: {_nodetype: ID,  name: print}}],  iftrue: {_nodetype: Return,  expr: {_nodetype: ID,  name: max}}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: print, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: a, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: a, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}]},  type: {_nodetype: TypeDecl,  declname: print, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}