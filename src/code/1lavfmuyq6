{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: root}, op: !=, right: {_nodetype: ID,  name: NULL}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: root}, type: ->}, op: ==, right: {_nodetype: ID,  name: key}},  iffalse: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: StructRef,  field: {_nodetype: ID,  name: left}, name: {_nodetype: ID,  name: root}, type: ->}, {_nodetype: ID,  name: key}]},  name: {_nodetype: ID,  name: searchRec}}, iftrue: {_nodetype: Return,  expr: {_nodetype: Constant,  type: int, value: 1}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: root}, type: ->}, {_nodetype: ID,  name: key}]},  name: {_nodetype: ID,  name: searchRec}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: searchRec, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: root, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: root, quals: [], type: {_nodetype: Struct,  decls: None, name: tree}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: key, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: key, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: searchRec, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}