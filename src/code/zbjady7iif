{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: r, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: r, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: r}, op: =, rvalue: {_nodetype: ID,  name: root}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: numKeys}, name: {_nodetype: ID,  name: r}, type: ->}, op: ==, right: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: Constant,  type: int, value: 2}, op: *, right: {_nodetype: ID,  name: t}}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: root}, {_nodetype: ID,  name: k}, {_nodetype: ID,  name: tmp}]},  name: {_nodetype: ID,  name: insertNonFull}}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: Cast,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}, op: sizeof}]},  name: {_nodetype: ID,  name: malloc}}, to_type: {_nodetype: Typename,  name: None, quals: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: None, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}}, name: s, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: s, quals: [], type: {_nodetype: Struct,  decls: None, name: node}}}}, {_nodetype: Assignment,  lvalue: {_nodetype: ArrayRef,  name: {_nodetype: StructRef,  field: {_nodetype: ID,  name: kids}, name: {_nodetype: ID,  name: s}, type: ->}, subscript: {_nodetype: Constant,  type: int, value: 0}}, op: =, rvalue: {_nodetype: ID,  name: r}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: root}, op: =, rvalue: {_nodetype: ID,  name: s}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: root}, type: ->}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: s}, type: ->}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: Assignment,  lvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: numKeys}, name: {_nodetype: ID,  name: s}, type: ->}, op: =, rvalue: {_nodetype: Constant,  type: int, value: 0}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "[%x  %x]\\n\\n"}, {_nodetype: ID,  name: root}, {_nodetype: ID,  name: s}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: root}, {_nodetype: Constant,  type: int, value: 0}]},  name: {_nodetype: ID,  name: split}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: s}, {_nodetype: ID,  name: k}, {_nodetype: ID,  name: tmp}]},  name: {_nodetype: ID,  name: insertNonFull}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "root%d r%d s%d second\\n"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: root}, type: ->}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: r}, type: ->}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: isLeaf}, name: {_nodetype: ID,  name: s}, type: ->}]},  name: {_nodetype: ID,  name: printf}}],    decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: insert, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: tmp, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: tmp, quals: [], type: {_nodetype: Struct,  decls: None, name: body}}}]},  type: {_nodetype: TypeDecl,  declname: insert, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}