{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: temp, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: temp, quals: [], type: {_nodetype: Struct,  decls: None, name: tree}}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: root}, op: ==, right: {_nodetype: ID,  name: NULL}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: ID,  name: root}}, {_nodetype: While, cond: {_nodetype: BinaryOp,  left: {_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: temp}, type: ->}, op: !=, right: {_nodetype: ID,  name: NULL}},  stmt: {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: temp}, op: =, rvalue: {_nodetype: StructRef,  field: {_nodetype: ID,  name: right}, name: {_nodetype: ID,  name: temp}, type: ->}}}],  iftrue: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "empty tree\\n"}]},  name: {_nodetype: ID,  name: printf}}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%d\\n"}, {_nodetype: StructRef,  field: {_nodetype: ID,  name: data}, name: {_nodetype: ID,  name: temp}, type: ->}]},  name: {_nodetype: ID,  name: printf}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: max, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: max, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}