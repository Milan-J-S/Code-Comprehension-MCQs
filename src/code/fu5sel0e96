{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: t}, op: *}, op: ==, right: {_nodetype: Constant,  type: char, value: "\\0"}},  iffalse: None, iftrue: {_nodetype: Return,  expr: None}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "%c"}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: t}, op: *}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: t}, op: ++}]},  name: {_nodetype: ID,  name: print}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: print, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: t, quals: [], storage: [], type: {_nodetype: PtrDecl,  quals: [], type: {_nodetype: TypeDecl,  declname: t, quals: [], type: {_nodetype: IdentifierType,  names: [char]}}}}]},  type: {_nodetype: TypeDecl,  declname: print, quals: [], type: {_nodetype: IdentifierType,  names: [void]}}}}, param_decls: None}