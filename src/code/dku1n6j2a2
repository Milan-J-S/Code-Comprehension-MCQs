{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: ele, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: ele, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: f}, op: >, right: {_nodetype: ID,  name: r}},  iffalse: {_nodetype: Compound, block_items: [{_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: ele}, op: =, rvalue: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: a}, subscript: {_nodetype: ID,  name: f}}}, {_nodetype: UnaryOp,  expr: {_nodetype: ID,  name: f}, op: p++}],  iftrue: {_nodetype: Compound, block_items: [{_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: Constant,  type: string, value: "underflow"}]},  name: {_nodetype: ID,  name: printf}}, {_nodetype: Assignment,  lvalue: {_nodetype: ID,  name: ele}, op: =, rvalue: {_nodetype: UnaryOp,  expr: {_nodetype: Constant,  type: int, value: 1}, op: -}}],  {_nodetype: Return,  expr: {_nodetype: ID,  name: ele}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: delete, quals: [], storage: [], type: {_nodetype: FuncDecl, args: None,  type: {_nodetype: TypeDecl,  declname: delete, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}