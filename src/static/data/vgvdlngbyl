#include<stdio.h>
#include<stdlib.h>
#include<time.h>

void heapSort();
void heapify();
void constructHeap();

struct timespec start,end;

long count = 0;

int main()
{
int n;
scanf("%d",&n);

int arr[n+1];

for(int i=1;i<n+1;i++)
	scanf("%d",&arr[i]);
	


clock_gettime(CLOCK_REALTIME,&start);
heapSort(arr,n);
clock_gettime(CLOCK_REALTIME,&end);

printf("Execution Time :  %ld\n\n",(end.tv_sec-start.tv_sec)*1000 + (end.tv_nsec-start.tv_nsec)/1000000);

printf("No. of comparisions :  %ld\n",count);

for(int i=1;i<=n;i++)
	printf("%d\n",arr[i]);
printf("\n");
return 0;
}

void heapSort(int *arr,int r)
{
constructHeap(arr,r);
for(int i=r;i>=2;i--)
	{
	int temp =arr[1];
	arr[1] = arr[i];
	arr[i] = temp;
	
	heapify(arr,i-1,1);
	}
}


void constructHeap(int *arr,int r)
{
if(r<=1) 
	return;
for(int i=r/2; i>=1; i--)
	heapify(arr,r,i);
}

void heapify(int *arr,int r, int k)
{
if(2*k > r)
	return;
int j= 2*k;
if(j+1 <= r)
	if(arr[j+1] > arr[j])
		j++;
if(arr[j] > arr[k])
	{
	
	count++;
	
	int temp = arr[j];
	arr[j] = arr[k];
	arr[k] = temp;
	}
heapify(arr,r,j);
}
