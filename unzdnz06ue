{_nodetype: FuncDef, body: {_nodetype: Compound, block_items: [{_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: >, right: {_nodetype: Constant,  type: int, value: 0}}, op: &&, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: <=, right: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: r}, op: -, right: {_nodetype: ID,  name: l}}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}}},  iffalse: None, iftrue: {_nodetype: Compound, block_items: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: arr}, {_nodetype: ID,  name: l}, {_nodetype: ID,  name: r}]},  name: {_nodetype: ID,  name: randomPartition}}, name: pos, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: pos, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: pos}, op: -, right: {_nodetype: ID,  name: l}}, op: ==, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: ArrayRef,  name: {_nodetype: ID,  name: arr}, subscript: {_nodetype: ID,  name: pos}}}}, {_nodetype: If, cond: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: pos}, op: -, right: {_nodetype: ID,  name: l}}, op: >, right: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}},  iffalse: None, iftrue: {_nodetype: Return,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: arr}, {_nodetype: ID,  name: l}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: pos}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: ID,  name: k}]},  name: {_nodetype: ID,  name: kthSmallest}}}}, {_nodetype: Return,  expr: {_nodetype: FuncCall, args: {_nodetype: ExprList,  exprs: [{_nodetype: ID,  name: arr}, {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: pos}, op: +, right: {_nodetype: Constant,  type: int, value: 1}}, {_nodetype: ID,  name: r}, {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: BinaryOp,  left: {_nodetype: ID,  name: k}, op: -, right: {_nodetype: ID,  name: pos}}, op: +, right: {_nodetype: ID,  name: l}}, op: -, right: {_nodetype: Constant,  type: int, value: 1}}]},  name: {_nodetype: ID,  name: kthSmallest}}}],  {_nodetype: Return,  expr: {_nodetype: ID,  name: INT_MAX}}],   decl: {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: kthSmallest, quals: [], storage: [], type: {_nodetype: FuncDecl, args: {_nodetype: ParamList,  params: [{_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: arr, quals: [], storage: [], type: {_nodetype: ArrayDecl,  dim: None, dim_quals: [], type: {_nodetype: TypeDecl,  declname: arr, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: l, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: l, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: r, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: r, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}, {_nodetype: Decl, bitsize: None,  funcspec: [], init: None, name: k, quals: [], storage: [], type: {_nodetype: TypeDecl,  declname: k, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}]},  type: {_nodetype: TypeDecl,  declname: kthSmallest, quals: [], type: {_nodetype: IdentifierType,  names: [int]}}}}, param_decls: None}